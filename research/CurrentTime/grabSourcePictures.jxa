function screenshotRegionToFile(x,y,w,h,path){
	//Largely ported from:
	//NSBitmapImageRep *imgRep = [[image representations] objectAtIndex: 0];
	//NSData *data = [imgRep representationUsingType: NSPNGFileType properties: nil];
	//[data writeToFile: @"/path/to/file.png" atomically: NO];

	ObjC.import('Foundation')
	ObjC.import('AppKit')

    var rect = $.CGRectMake(x,y,w,h)

	//Get DisplayID from rectangle
	var displays = Ref()
	$.CGMainDisplayID() //Fully initialise CoreGraphics Framework
	$.CGGetDisplaysWithRect(rect,1,displays,null)
	displayID = displays[0]

	image = $.CGDisplayCreateImageForRect(displayID,rect);
	bitmap = $.NSBitmapImageRep.alloc.initWithCGImage(image)
	pngData = bitmap.representationUsingTypeProperties($.NSPNGFileType,$())
	pngData.writeToFileAtomically(path,true)
	displayID.release
	image.release
	bitmap.release
	pngData.release
}

function getScreenFlowTimeCode(filename){
    button = Application("System Events").applicationProcesses["ScreenFlow"].windows[0].buttons[3]
    if(button.description() == "Fast Forward"){
        frame = button.attributes['AXFrame'].value()
    	ffdFrame = [frame[0], frame[1], frame[2]-frame[0], frame[3]-frame[1]]
    	ffdFrame = [ffdFrame[0] + ffdFrame[2] + 5, ffdFrame[1]+2, ffdFrame[2]+78, ffdFrame[3]-5]
        screenshotRegionToFile(ffdFrame[0], ffdFrame[1], ffdFrame[2], ffdFrame[3],"/Users/Sancarn/Pictures/" + filename + ".png")
    }
}

var sf = Application('ScreenFlow')
var system = Application('System Events')
sf.activate()
system.keystroke("0", {using: 'command down'})
for(var i = 0;i<10;i++){
    getScreenFlowTimeCode("TimeCodeFrame0" + i)
    system.keyCode(124)
}
